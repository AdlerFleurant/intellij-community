private val junitVersion = "5.2.0"
private val asmVersion = "5.0.3"
private val baksmaliVersion = "2.2.1"
private val androidToolsVersion = "26.1.2"

object Versions {
  val `kotlin-jvm` = "1.2.60"
}

object Dependencies {
  val activation = "javax.activation:activation:1.1.1"
  val `analytics-protos` = "com.android.tools.analytics-library:protos:26.1.2"
  val `archive-patcher` = arrayOf(":explainer:", ":generator:", ":shared:")
  val asm = ":asm-all:"
  val `asm-tools` = arrayOf(":asm:$asmVersion", ":asm-analysis:$asmVersion", ":asm-tree:$asmVersion")
  val assertJ = "org.assertj:assertj-core:3.9.1"
  val `assertj-swing` = "org.assertj:assertj-swing:3.8.0"
  val automaton = "dk.brics:automaton:1.12-1"
  val baksmali = arrayOf(":baksmali:$baksmaliVersion", ":util:$baksmaliVersion")
  val batik = "org.apache.xmlgraphics:batik-all:1.10"
  val `bouncy-castle-provider` = "org.bouncycastle:bcprov-jdk15on:1.59"
  val CGLIB = ":cglib-nodep:3.2.4"
  val `cli-parser` = "com.github.spullara.cli-parser:cli-parser:1.1.2"
  val `android-tools-analytics-library-shared` = "com.android.tools.analytics-library:shared:$androidToolsVersion"
  val `android-tools-analytics-library-tracker` = "com.android.tools.analytics-library:tracker:$androidToolsVersion"
  val `android-tools-annotations` = "com.android.tools:annotations:$androidToolsVersion"
  val `android-tools-build-manifest-merger` = "com.android.tools.build:manifest-merger:$androidToolsVersion"
  val `android-tools-common` = "com.android.tools:common:$androidToolsVersion"
  val `android-tools-ddms-ddmlib` = "com.android.tools.ddms:ddmlib:$androidToolsVersion"
  val `android-tools-sdk-common` = "com.android.tools:sdk-common:$androidToolsVersion"
  val `android-tools-testutils` = "com.android.tools:testutils:$androidToolsVersion"
  val `commons-codec` = "commons-codec:commons-codec:1.10"
  val `commons-compress` = "org.apache.commons:commons-compress:1.16.1"
  val `commons-imaging` = "org.jetbrains.intellij.deps:commons-imaging:1.0-RC-1"
  val `commons-io` = "commons-io:commons-io:2.6"
  val `commons-logging` = "commons-logging:commons-logging:1.2"
  val `commons-net` = "commons-net:commons-net:3.6"
  val `cucumber-core` = arrayOf(":gherkin:2.12.2", ":cucumber-core:1.2.4")
  val `cucumber-java` = "info.cukes:cucumber-java:1.2.5"
  val `cucumber-testing` = "info.cukes:cucumber-jvm-deps:1.0.5"
  val `delight-nashorn-sandbox` = "org.javadelight:delight-nashorn-sandbox:0.1.15"
  val dexlib2 = ":dexlib2:2.2.1"
  val Eclipse = ":ecj:4.7.2"
  val equalsverifier = "nl.jqno.equalsverifier:equalsverifier:2.4.5"
  val `error-prone-annotations` = "com.google.errorprone:error_prone_annotations:2.3.1"
  val fest = ":fest-assert:1.5.0-SNAPSHOT"
  val `fest-swing` = "org.jetbrains.intellij.deps:fest-swing:1.4.6"
  val fst = "de.ruedigermoeller:fst:2.57"
  val flexmark = "com.vladsch.flexmark:flexmark:0.34.0"
  val `gant-groovy` = "org.codehaus.gant:gant_groovy2.3:1.9.11"
  val Gradle = "org.jetbrains.intellij.deps:gradle-api:4.8"
  val Groovy = "org.codehaus.groovy:groovy-all:2.4.15"
  val `Groovy-Eclipse-Batch` = "org.codehaus.groovy:groovy-eclipse-batch:2.4.15-01"
  val gson = "com.google.code.gson:gson:2.8.5"
  val Guava = "com.google.guava:guava:25.1-jre"
  val hamcrest = "org.hamcrest:hamcrest-library:1.3"
  val `http-client` = "org.apache.httpcomponents:httpmime:4.5.5"
  val `imageio-tiff` = "com.twelvemonkeys.imageio:imageio-tiff:3.3.2"
  val imgscalr = "org.imgscalr:imgscalr-lib:4.2"
  val ini4j = "org.jetbrains.intellij.deps:ini4j:0.5.5-2"
  val `intellij-coverage` = "org.jetbrains.intellij.deps:intellij-coverage-agent:1.0.470"
  val `intellij-test-discovery` = "org.jetbrains.intellij.deps:intellij-test-discovery-agent:1.0.470"
  val jackson = "com.fasterxml.jackson.core:jackson-databind:2.9.6"
  val JaCoCo = arrayOf(":jacocoant:", "jacocoagent:")
  val JavaHelp = "javax.help:javahelp:2.0.02"
  val `javax-inject` = "javax.inject:javax.inject:1"
  val Jaxen = "jaxen:jaxen:1.1.6"
  val jayatana = ":jayatana:1.2.4"
  val jcip = "net.jcip:jcip-annotations:1.0"
  val jdom = "org.jetbrains.intellij.deps:jdom:2.0.6"
  val `jediterm-pty` = ":jediterm-pty:2.10"
  val `jetbrains-annotations` = "org.jetbrains:annotations:16.0.2"
  val `jetbrains-annotations-java5` = "org.jetbrains:annotations-java5:16.0.2"
  val jetCheck = "com.github.jetbrains:jetCheck:0.1"
  val `jgoodies-common` = "com.jgoodies:jgoodies-common:1.4.0"
  val `jgoodies-forms` = "com.jgoodies:forms:1.1-preview"
  val jgraphx = "org.tinyjee.jgraphx:jgraphx:3.4.1.3"
  val jimfs = ":jimfs:1.1:"
  val jna = "net.java.dev.jna:jna-platform:4.5.0"
  val JSch = "com.jcraft:jsch:0.1.54"
  val `jsch-agent-proxy` = arrayOf(":jsch.agentproxy.connector-factory:", ":jsch.agentproxy.core:", ":jsch.agentproxy.pageant:",
                                   ":jsch.agentproxy.sshagent:", ":jsch.agentproxy.usocket-jna:", ":jsch.agentproxy.usocket-nc:",
                                   ":jsch.agentproxy.jsch:")
  val jsr305 = ":jsr305:"
  val JUnit3 = "junit:junit:3.8.1"
  val JUnit4 = "junit:junit:4.12"
  val JUnit5 = "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  val JUnit5_rt = "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
  val Kryo = "com.esotericsoftware.kryo:kryo:2.24.0"
  val kxml2 = "net.sf.kxml:kxml2:2.3.0"
  val layoutlib = ":layoutlib:"
  val Log4J = "log4j:log4j:1.2.17"
  val `lz4-java` = "net.jpountz.lz4:lz4:1.3.0"
  val Mac = ":eawtstub:"
  val markdown4j = "org.commonjava.googlecode.markdown4j:markdown4j:2.2-cj-1.1"
  val markdownj = ":markdownj-core:0.4.2-SNAPSHOT"
  val memoryfilesystem = "com.github.marschall:memoryfilesystem:1.2.1"
  val microba = ":microba:"
  val `miglayout-swing` = "com.miglayout:miglayout-swing:5.1"
  val mockito = "org.mockito:mockito-core:2.18.0"
  val Mocks = arrayOf(":easymock:3.4", ":jmock:2.5.1", ":jmock-junit4:2.5.1", ":jmock-legacy:2.5.1", ":objenesis:1.0")
  val NanoXML = "be.cyberelf.nanoxml:nanoxml:2.2.3"
  val nekohtml = "net.sourceforge.nekohtml:nekohtml:1.9.22"
  val `netty-codec-http` = "io.netty:netty-codec-http:4.1.25.Final"
  val `netty-handler` = "io.netty:netty-handler:4.1.25.Final"
  val Objenesis = "org.objenesis:objenesis:2.6"
  val `httpcomponents-fluent-hc` = "org.apache.httpcomponents:fluent-hc:4.5.5"
  val OroMatcher = "oro:oro:2.0.8"
  val picocontainer = "org.picocontainer:picocontainer:1.2"
  val `precompiled_jshell-frontend` = ":jshell-frontend:"
  val protobuf = "com.google.protobuf:protobuf-java:3.4.0"
  val `proxy-vole` = "com.github.markusbernhardt:proxy-vole:1.0.4"
  val pty4j = ":pty4j:0.7.5"
  val purejavacomm = ":purejavacomm:"
  val SceneBuilderKit = ":SceneBuilderKit:8.2.0"
  val `sherpa-solver` = ":constraint-layout:"
  val Slf4j = "org.slf4j:slf4j-log4j12:1.7.25"
  val snakeyaml = "org.yaml:snakeyaml:1.21"
  val sqlite = "org.xerial:sqlite-jdbc:3.21.0.1"
  val StreamEx = "one.util:streamex:0.6.7"
  val `studio-profiler-grpc` = ":studio-profiler-grpc:1.0::jarjar"
  val swingx = "org.swinglabs:swingx-core:1.6.2-2"
  val tcServiceMessages = ":serviceMessages:"
  val TestNG = arrayOf(":testng:", ":jcommander:")
  val `trilead-ssh2` = "org.jenkins-ci:trilead-ssh2:build-217-jenkins-11"
  val Trove4j = "org.jetbrains.intellij.deps:trove4j:1.0.20160824"
  val truth = ":truth:0.28"
  val Velocity = "org.apache.velocity:velocity:1.7"
  val winp = "org.jvnet.winp:winp:1.26"
  val Xerces = "xerces:xercesImpl:2.11.0"
  val `xml-apis-ext` = "xml-apis:xml-apis-ext:1.3.04"
  val `xml-resolver` = "xml-resolver:xml-resolver:1.2"
  val XmlBeans = "org.apache.xmlbeans:xmlbeans:2.6.0"
  val `xmlgraphics-commons` = "org.apache.xmlgraphics:xmlgraphics-commons:2.3"
  val XmlRPC = "org.apache.ws.xmlrpc:xmlrpc:2.0.1"
  val XStream = "com.thoughtworks.xstream:xstream:1.4.10"
}